MongoDB shell version v4.0.4
connecting to: mongodb://127.0.0.1:4000/test
Implicit session: session { "id" : UUID("5ad68594-8fcc-4a8f-ae6e-6a20d880d082") }
MongoDB server version: 4.0.4
Solution for Implementation3 Task 1
============================
Student number : 10241485
Name : Ho Ka Yan Jeslyn
Date : 15 May 2024
============================

(1) Display in a pretty format information about an employee number 11. Do not list information about trips performed by the employee.
(1) db.transport.find({"EMPLOYEE.e#":"11"},{"EMPLOYEE.trips":0}).pretty()
 
{
	"_id" : ObjectId("664adab2936a76cb66ce4c43"),
	"EMPLOYEE" : {
		"e#" : "11",
		"name" : "Adam Fox",
		"dob" : "04-MAY-70",
		"address" : "45 Victoria St. Hurstville, NSW 2456",
		"hiredate" : "12-JAN-99",
		"position" : "driver",
		"licence" : "20005",
		"status" : "ON LEAVE"
	}
}
 
 =============================================================================
(2) Display in a pretty format information about all mechanics. For each mechanic list only employee number, name, and position.
(2) db.transport.find({"EMPLOYEE.position":"mechanic"},{"EMPLOYEE.e#":1, "EMPLOYEE.name":1,"EMPLOYEE.position":1,"_id":0}).pretty()
 
{
	"EMPLOYEE" : {
		"e#" : "2",
		"name" : "Peter Taylor",
		"position" : "mechanic"
	}
}
{
	"EMPLOYEE" : {
		"e#" : "4",
		"name" : "John Gray",
		"position" : "mechanic"
	}
}
{
	"EMPLOYEE" : {
		"e#" : "6",
		"name" : "Michael Jones",
		"position" : "mechanic"
	}
}
{
	"EMPLOYEE" : {
		"e#" : "8",
		"name" : "Peter O'Brien",
		"position" : "mechanic"
	}
}
{
	"EMPLOYEE" : {
		"e#" : "10",
		"name" : "John Fox",
		"position" : "mechanic"
	}
}
{
	"EMPLOYEE" : {
		"e#" : "12",
		"name" : "Phillip Cox",
		"position" : "mechanic"
	}
}
{
	"EMPLOYEE" : {
		"e#" : "14",
		"name" : "Andrew R. Smith",
		"position" : "mechanic"
	}
}
 
 
 =============================================================================
(3) Display in a pretty format information about the trucks with the registration numbers PKR768 and PKR008 and SST005. Do not list identifiers of the documents.
(3) db.transport.find({"TRUCK.registration":{$in:["PKR768","PKR008","SST005"]}},{"TRUCK.registration":1, "_id":0}).pretty()
 
{ "TRUCK" : { "registration" : "PKR008" } }
{ "TRUCK" : { "registration" : "PKR768" } }
{ "TRUCK" : { "registration" : "SST005" } }
 
 
 =============================================================================
(4) Find the total number of employees.
(4) db.transport.find({"EMPLOYEE: {$exists: true}}).count()
 
15
 
 
 =============================================================================
(5) Find the total number of mechanics.
(5) db.transport.find({"EMPLOYEE.position":"mechanic"}).count()
 
7
 
 
 =============================================================================
(6) Display in a pretty format the names and positions of all employees;
(6) db.transport.find({}, {"EMPLOYEE.name": 1, "EMPLOYEE.position": 1, "_id": 0}).pretty()
 
{ }
{ }
{ }
{ }
{ }
{ }
{ }
{ }
{ }
{ }
{ "EMPLOYEE" : { "name" : "John Smith", "position" : "driver" } }
{ "EMPLOYEE" : { "name" : "Peter Taylor", "position" : "mechanic" } }
{ "EMPLOYEE" : { "name" : "John Doe", "position" : "driver" } }
{ "EMPLOYEE" : { "name" : "John Gray", "position" : "mechanic" } }
{ "EMPLOYEE" : { "name" : "Adam Taylor", "position" : "driver" } }
{ "EMPLOYEE" : { "name" : "Michael Jones", "position" : "mechanic" } }
{ "EMPLOYEE" : { "name" : "Frederic Jones", "position" : "driver" } }
{ "EMPLOYEE" : { "name" : "Peter O'Brien", "position" : "mechanic" } }
{ "EMPLOYEE" : { "name" : "John Lucas", "position" : "driver" } }
{ "EMPLOYEE" : { "name" : "John Fox", "position" : "mechanic" } }
Type "it" for more
 
 
 =============================================================================
(7) Display in a pretty format the registrations number of all trucks maintained by John Fox. there is no need to remove duplicates from a listing.
(7) db.transport.find({"EMPLOYEE.name": "John Fox"},{"EMPLOYEE.name": 1,"EMPLOYEE.maintenances": 1, "EMPLOYEE.maintenances.registration":1, "_id": 0}).pretty()
 
{
	"EMPLOYEE" : {
		"name" : "John Fox",
		"maintenances" : [
			{
				"registration" : "LUCY01"
			},
			{
				"registration" : "LUCY01"
			},
			{
				"registration" : "KKK007"
			},
			{
				"registration" : "QRT834"
			},
			{
				"registration" : "PKR768"
			},
			{
				"registration" : "KKK007"
			},
			{
				"registration" : "QRT834"
			},
			{
				"registration" : "PKR768"
			}
		]
	}
}
 
 
 =============================================================================
(8) Display in a pretty format the names of mechanics who maintained a car with a registration LUCY01.
(8) db.transport.find({"EMPLOYEE.maintenances.registration": "LUCY01", "EMPLOYEE.position": "mechanic"},{"EMPLOYEE.name":1, "_id": 0}).pretty()
 
{ "EMPLOYEE" : { "name" : "Michael Jones" } }
{ "EMPLOYEE" : { "name" : "John Fox" } }
 
 
 =============================================================================
(9) Display in a pretty format the names of drivers who performed no trips so far.
(9) db.transport.find({"EMPLOYEE.position":"driver", "EMPLOYEE.trips":[]},{"EMPLOYEE.name":1, "EMPLOYEE.trip":1,"_id": 0}).pretty()
 
{ "EMPLOYEE" : { "name" : "Andrew K. Smith" } }
{ "EMPLOYEE" : { "name" : "Michael Potter" } }
 
 
 =============================================================================
(10) Display in a pretty format names of drivers who started at least on trip in Wollongong.
(10) db.transport.find({"EMPLOYEE.position": "driver", "EMPLOYEE.trips": { $elemMatch: { "legs.0": "Wollongong" }}}, {"EMPLOYEE.name": 1, "_id": 0}).pretty()
 
{ "EMPLOYEE" : { "name" : "John Smith" } }
{ "EMPLOYEE" : { "name" : "Adam Taylor" } }
{ "EMPLOYEE" : { "name" : "Frederic Jones" } }
{ "EMPLOYEE" : { "name" : "Adam Fox" } }
bye